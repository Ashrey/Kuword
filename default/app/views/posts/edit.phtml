{%extends  'admin.phtml' %}
{% block titlezone %}{% endblock %}
{%block content %}
{%exec Flash::content %}
<style>
    input.no-border{
        border-color: transparent;
    }

    input.title{
        text-align: center;
        font-size: 200%;
        font-weight: bold;
        height: auto;
    }
</style>
<div class="row">
    <div class="col-10 offset-1">
        {%exec Form::open%}
        {%exec Form::select 'posts.post_type_id', sel,'class="control"', NULL, 'Type Publish'%}
		{%exec Form::text 'posts.title' 'class="control no-border title" placeholder="Title"' %}
        <div id="rendered-markdown"></div>
		<div class="entry-markdown-content">
        {%exec Form::textarea 'posts.content' 'class="control entry-markdown"' %}
        </div>
        {%inline '_partial/submit.phtml'%}
        {%exec Form::close%}
    </div>
</div>
{%endblock%}
{% block jsblock%}
    {%js 'zepto.min' %}
    {%js 'marked'%}
<script type="text/javascript">
'use strict';
$(function(){
    var editor = $('#posts_content'), render = $('#rendered-markdown'),
        cb = function(){
            var text = editor.val();
            render.html(marked(text));
            if(text.trim().length > 0){
                render.css({display: 'block'});
                editor.css({display: 'none'});
                editor.height(render.height() +20 || 20);
            }
        }
    ;

    render.click(function(){
        editor.css({display: 'block'});
        render.css({display: 'none'});
        editor.focus();
    });

    function insertMetachars(sStartTag, sEndTag) {
    var bDouble = arguments.length > 1, oMsgInput = document.myForm.myTxtArea, nSelStart = oMsgInput.selectionStart, nSelEnd = oMsgInput.selectionEnd, sOldText = oMsgInput.value;
    oMsgInput.value = sOldText.substring(0, nSelStart) + (bDouble ? sStartTag + sOldText.substring(nSelStart, nSelEnd) + sEndTag : sStartTag) + sOldText.substring(nSelEnd);
    oMsgInput.setSelectionRange(bDouble || nSelStart === nSelEnd ? nSelStart + sStartTag.length : nSelStart, (bDouble ? nSelEnd : nSelStart) + sStartTag.length);
    oMsgInput.focus();
    }

    editor.blur(cb);

    editor.keyup(function(){
        if (this.scrollHeight > this.clientHeight) {
            this.style.height = this.scrollHeight + "px";
        }
    });
    $(cb);
});
</script>
{%endblock%}

